public class App {
    public static void main(String[] args) throws Exception {
        System.out.println("=== –≠–º—É–ª—è—Ç–æ—Ä —Å–±–æ—Ä—â–∏–∫–∞ –º—É—Å–æ—Ä–∞ Java (Mark & Sweep) ===\n");
        
        demonstrateMarkAndSweep();
        
        System.out.println("\n" + "=".repeat(50) + "\n");
        
        demonstrateAdvancedScenarios();
    }
    
    private static void demonstrateMarkAndSweep() {
        System.out.println("üéØ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ê–õ–ì–û–†–ò–¢–ú–ê MARK & SWEEP");
        System.out.println("=====================================");
        
        Heap heap = new Heap(1000);
        MarkAndSweepGC gc = new MarkAndSweepGC(heap);
        
        GCObject obj1 = new GCObject("üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", 100);
        GCObject obj2 = new GCObject("üìã –ü—Ä–æ—Ñ–∏–ª—å", 150);
        GCObject obj3 = new GCObject("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", 80);
        GCObject obj4 = new GCObject("üíæ –ö—ç—à", 200);
        GCObject obj5 = new GCObject("üóëÔ∏è –í—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ", 120);
        
        heap.addObject(obj1);
        heap.addObject(obj2);
        heap.addObject(obj3);
        heap.addObject(obj4);
        heap.addObject(obj5);
        
        obj1.addReference(obj2);
        obj2.addReference(obj3);
        obj1.addReference(obj4);
        
        gc.addRoot(obj1);
        
        System.out.println("üìä –°–æ–∑–¥–∞–Ω–æ –æ–±—ä–µ–∫—Ç–æ–≤: " + heap.getAllObjects().size());
        System.out.println("üíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –ø–∞–º—è—Ç–∏: " + heap.getCurrentSize() + "/" + heap.getMaxSize() + " –±–∞–π—Ç");
        System.out.println();
        
        gc.demonstrateMarkAndSweep();
    }
    
    private static void demonstrateAdvancedScenarios() {
        System.out.println("üîç –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –°–¶–ï–ù–ê–†–ò–ò");
        System.out.println("==========================");
        
        demonstrateCircularReferences();
        demonstrateMultipleRoots();
    }
    
    private static void demonstrateCircularReferences() {
        System.out.println("\nüîÑ –¶–∏–∫–ª–∏—á–µ—Å–∫–∏–µ —Å—Å—ã–ª–∫–∏:");
        System.out.println("======================");
        
        Heap heap = new Heap(500);
        MarkAndSweepGC gc = new MarkAndSweepGC(heap);
        
        GCObject node1 = new GCObject("üîó –£–∑–µ–ª 1", 50);
        GCObject node2 = new GCObject("üîó –£–∑–µ–ª 2", 50);
        GCObject node3 = new GCObject("üîó –£–∑–µ–ª 3", 50);
        
        heap.addObject(node1);
        heap.addObject(node2);
        heap.addObject(node3);
        
        node1.addReference(node2);
        node2.addReference(node3);
        node3.addReference(node1);
        
        gc.addRoot(node1);
        
        System.out.println("–°–æ–∑–¥–∞–Ω —Ü–∏–∫–ª: –£–∑–µ–ª1 -> –£–∑–µ–ª2 -> –£–∑–µ–ª3 -> –£–∑–µ–ª1");
        gc.demonstrateMarkAndSweep();
    }
    
    private static void demonstrateMultipleRoots() {
        System.out.println("\nüå≥ –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∫–æ—Ä–Ω–∏:");
        System.out.println("=======================");
        
        Heap heap = new Heap(600);
        MarkAndSweepGC gc = new MarkAndSweepGC(heap);
        
        GCObject root1 = new GCObject("üå≥ –ö–æ—Ä–µ–Ω—å 1", 80);
        GCObject root2 = new GCObject("üå≥ –ö–æ—Ä–µ–Ω—å 2", 80);
        GCObject child1 = new GCObject("üë∂ –î–æ—á–µ—Ä–Ω–∏–π 1", 60);
        GCObject child2 = new GCObject("üë∂ –î–æ—á–µ—Ä–Ω–∏–π 2", 60);
        GCObject orphan = new GCObject("üëª –°–∏—Ä–æ—Ç–∞ –µ–±–∞–Ω–∞—è", 40);
        
        heap.addObject(root1);
        heap.addObject(root2);
        heap.addObject(child1);
        heap.addObject(child2);
        heap.addObject(orphan);
        
        root1.addReference(child1);
        root2.addReference(child2);
        
        gc.addRoot(root1);
        gc.addRoot(root2);
        
        System.out.println("–î–≤–∞ –∫–æ—Ä–Ω—è —Å –¥–æ—á–µ—Ä–Ω–∏–º–∏ –æ–±—ä–µ–∫—Ç–∞–º–∏");
        gc.demonstrateMarkAndSweep();
    }
}
