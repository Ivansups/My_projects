/**
 * –ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã —Å–±–æ—Ä—â–∏–∫–∞ –º—É—Å–æ—Ä–∞ —Å –ø—Ä–æ—Å—Ç—ã–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏
 */
public class SimpleVariablesExample {
    
    public static void main(String[] args) {
        System.out.println("üéØ –ü–†–ò–ú–ï–†: –°–ë–û–†–©–ò–ö –ú–£–°–û–†–ê –ò –ü–†–û–°–¢–´–ï –ü–ï–†–ï–ú–ï–ù–ù–´–ï");
        System.out.println("=============================================\n");
        
        demonstrateLocalVariables();
        demonstrateMethodParameters();
        demonstrateTemporaryObjects();
    }
    
    /**
     * –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å –ª–æ–∫–∞–ª—å–Ω—ã–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏
     */
    private static void demonstrateLocalVariables() {
        System.out.println("üìù –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø: –õ–æ–∫–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ");
        System.out.println("=====================================");
        
        // –°–æ–∑–¥–∞–µ–º –∫—É—á—É –∏ —Å–±–æ—Ä—â–∏–∫
        Heap heap = new Heap(1000);
        MarkAndSweepGC gc = new MarkAndSweepGC(heap);
        
        // –°–∏–º—É–ª–∏—Ä—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        GCObject userName = new GCObject("üë§ –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", 50);
        GCObject userAge = new GCObject("üéÇ –í–æ–∑—Ä–∞—Å—Ç", 30);
        GCObject userHobbies = new GCObject("üé® –•–æ–±–±–∏", 80);
        GCObject tempData = new GCObject("üóëÔ∏è –í—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ", 60);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫—É—á—É
        heap.addObject(userName);
        heap.addObject(userAge);
        heap.addObject(userHobbies);
        heap.addObject(tempData);
        
        // –°–æ–∑–¥–∞–µ–º —Å–≤—è–∑–∏ (–∫–∞–∫ –≤ —Ä–µ–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ)
        userName.addReference(userHobbies); // –ò–º—è —Å—Å—ã–ª–∞–µ—Ç—Å—è –Ω–∞ —Ö–æ–±–±–∏
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–∏ (–ª–æ–∫–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ)
        gc.addRoot(userName);  // userName - –∫–æ—Ä–µ–Ω—å
        gc.addRoot(userAge);   // userAge - –∫–æ—Ä–µ–Ω—å
        // tempData –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∫–æ—Ä–Ω—è - –±—É–¥–µ—Ç —Å–æ–±—Ä–∞–Ω
        
        System.out.println("üìä –°–æ–∑–¥–∞–Ω–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö: " + heap.getAllObjects().size());
        System.out.println("üíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –ø–∞–º—è—Ç–∏: " + heap.getCurrentSize() + "/" + heap.getMaxSize() + " –±–∞–π—Ç");
        
        // –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º —Å–±–æ—Ä–∫—É
        gc.demonstrateMarkAndSweep();
    }
    
    /**
     * –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –º–µ—Ç–æ–¥–æ–≤
     */
    private static void demonstrateMethodParameters() {
        System.out.println("\nüìù –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø: –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –º–µ—Ç–æ–¥–æ–≤");
        System.out.println("==================================");
        
        Heap heap = new Heap(800);
        MarkAndSweepGC gc = new MarkAndSweepGC(heap);
        
        // –°–∏–º—É–ª–∏—Ä—É–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –º–µ—Ç–æ–¥–∞
        GCObject methodParam1 = new GCObject("üì• –ü–∞—Ä–∞–º–µ—Ç—Ä 1", 40);
        GCObject methodParam2 = new GCObject("üì• –ü–∞—Ä–∞–º–µ—Ç—Ä 2", 50);
        GCObject localVar = new GCObject("üè† –õ–æ–∫–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è", 60);
        GCObject orphan = new GCObject("üëª –°–∏—Ä–æ—Ç–∞", 30);
        
        heap.addObject(methodParam1);
        heap.addObject(methodParam2);
        heap.addObject(localVar);
        heap.addObject(orphan);
        
        // –°–æ–∑–¥–∞–µ–º —Å–≤—è–∑–∏
        methodParam1.addReference(localVar);
        
        // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –º–µ—Ç–æ–¥–æ–≤ - –∫–æ—Ä–Ω–∏
        gc.addRoot(methodParam1);
        gc.addRoot(methodParam2);
        
        System.out.println("üìä –°–æ–∑–¥–∞–Ω–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤: " + heap.getAllObjects().size());
        
        gc.demonstrateMarkAndSweep();
    }
    
    /**
     * –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–±—ä–µ–∫—Ç–∞–º–∏
     */
    private static void demonstrateTemporaryObjects() {
        System.out.println("\nüìù –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø: –í—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã");
        System.out.println("==================================");
        
        Heap heap = new Heap(600);
        MarkAndSweepGC gc = new MarkAndSweepGC(heap);
        
        // –°–∏–º—É–ª–∏—Ä—É–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã
        GCObject mainObject = new GCObject("üéØ –ì–ª–∞–≤–Ω—ã–π –æ–±—ä–µ–∫—Ç", 100);
        GCObject temp1 = new GCObject("‚è∞ –í—Ä–µ–º–µ–Ω–Ω—ã–π 1", 40);
        GCObject temp2 = new GCObject("‚è∞ –í—Ä–µ–º–µ–Ω–Ω—ã–π 2", 50);
        GCObject temp3 = new GCObject("‚è∞ –í—Ä–µ–º–µ–Ω–Ω—ã–π 3", 30);
        GCObject result = new GCObject("‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç", 60);
        
        heap.addObject(mainObject);
        heap.addObject(temp1);
        heap.addObject(temp2);
        heap.addObject(temp3);
        heap.addObject(result);
        
        // –°–æ–∑–¥–∞–µ–º —Å–≤—è–∑–∏
        mainObject.addReference(temp1);
        temp1.addReference(temp2);
        temp2.addReference(result);
        // temp3 –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ —Å–≤—è–∑–µ–π
        
        // –¢–æ–ª—å–∫–æ –≥–ª–∞–≤–Ω—ã–π –æ–±—ä–µ–∫—Ç - –∫–æ—Ä–µ–Ω—å
        gc.addRoot(mainObject);
        
        System.out.println("üìä –°–æ–∑–¥–∞–Ω–æ –æ–±—ä–µ–∫—Ç–æ–≤: " + heap.getAllObjects().size());
        
        gc.demonstrateMarkAndSweep();
    }
}
